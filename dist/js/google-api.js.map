{"version":3,"sources":["google-api.js"],"names":["GoogleApi","theEvent","console","log","service","google","maps","places","PlacesService","myMap","details","detail","request","query","bounds","getBounds","textSearch","results","status","PlacesServiceStatus","OK","newEvent","CustomEvent","document","dispatchEvent","place","geo","geometry","location","title","name","content","rating","addMarker","setupListeners","addEventListener","handlePlaceSearch","mbStadium","lat","lng","Map","getElementById","center","zoom","myInfoWindow","InfoWindow","position","info","marker","Marker","map","addListener","setContent","open"],"mappings":"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","sourcesContent":["class GoogleApi {\n\n    // note here which instance variables I'm using\n    myMap = null;\n    myInfoWindow = null;\n\n    constructor() {\n        console.log('GoogleApi()')\n        this.setupListeners()\n    }\n    setupListeners() {\n        document.addEventListener('place-search', this.handlePlaceSearch)\n    }\n\n    handlePlaceSearch = (theEvent) => {\n        console.log('got a place search request', theEvent)\n\n        const service = new google.maps.places.PlacesService(this.myMap);\n\n\n\n        const details = theEvent.detail\n        const request = {\n            query: details['query'],\n            bounds: this.myMap.getBounds()\n            // location: details['location'],\n            // radius: 10000\n\n        }\n        service.textSearch(request, (results, status) => {\n            if (status == google.maps.places.PlacesServiceStatus.OK) {\n                console.log('got results', results)\n\n                const newEvent = new CustomEvent('place-results', {detail: results})\n                document.dispatchEvent(newEvent)\n\n                for (let place of results) {\n                    let geo = place.geometry.location\n                    let title = place.name\n                    let content = `<h2>${place.name}</h2>`\n                    let rating = place.rating\n            \n\n\n                    this.addMarker(geo, { title: title, content: content, rating: rating})\n                }\n            }\n        })\n    }\n\n    setup() {\n        console.log('setting up a map')\n    \n        const mbStadium = { lat: 33.7555, lng: -84.4010 };\n        this.myMap = new google.maps.Map(document.getElementById('my-map'), {\n            center: mbStadium,\n            zoom: 15\n        })\n\n\n       this.myInfoWindow = new google.maps.InfoWindow({\n            content: '',\n            rating: ''\n        })\n\n        this.addMarker(mbStadium, {title: \"Mercedes-Benz Stadium\", content: '<h2>Mercedes-Benz Stadium</h2>'})\n    }\n\n    // info will be an object with various bits of info\n    addMarker(position, info) {\n        const marker = new google.maps.Marker({\n            map: this.myMap,\n            position: position,\n            title: info['title'],\n            rating: info['rating']\n\n        }) \n\n      \n\n        \n        marker.addListener('click', () => {\n            this.myInfoWindow.setContent(info['content'], info['rating'])\n            this.myInfoWindow.open(this.myMap, marker)\n        })\n    }\n}\n"],"file":"google-api.js"}